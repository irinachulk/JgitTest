{"descriptionOfCourse": "\nGitvc\nThis course contains three parts that will allow you to learn the basics of working with git:\nCommitting files\n================\n\nIn this scenario,you will learn how to initialize a new repository _Git_ and commit files in the version control system.\n\nVersion control allows you to write changes to a file or set of files over time, which allows you to revert to a specific version if necessary. _Git_ is a distributed version control system, which means\nrelations of the locations of elements play a significant role in terms of the functioning of the system.\nThis means that instead\nsnapshot of the latest files you have a full storage mirror on your local computer. The repository tracks changes when they occurred and by whom.\n\n For more information about installing _Git_, you can refer to *[the official documentation] (https://git-scm.com/book/en/v2/Getting-Started-Instal..)*.\nCommitting Changes\n================\n\n,In this scenario, we will answer questions such as:\n * How to view changes in the working directory?\n \n * How to commit changes to your repository?\n#Using Branches\nHere you will learn how to create branches in your repository.\nThe branch allows you to work effectively in a completely new working directory.\nAs a result, in one repository ** _ Git _ ** there may be several different versions of the code base,\neach of which can be switched without changing directories.\n\nThe default branch in ** _ Git _ ** is called `` master``. Additional branches allow you to perform the same operations and commands,\nas on the master, such as committing, merging, and submitting changes.\nSince additional branches work just like master, they are ideal for prototyping and\n experiments, as any changes can be combined with master if necessary."}